plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.mikepenz.aboutlibraries.plugin'
    id 'kotlin-parcelize'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def useKeystoreProperties = keystorePropertiesFile.canRead()
def keystoreProperties = new Properties()
if (useKeystoreProperties) {
    keystoreProperties.load(FileInputStream(keystorePropertiesFile))
}

int MILLIS_IN_HOUR = 1000 * 60 * 60
int hoursSinceEpoch = System.currentTimeMillis() / MILLIS_IN_HOUR

android {
    compileSdk 34

    if (useKeystoreProperties) {
        signingConfigs {
            release {
                storeFile file(rootProject.file(keystoreProperties["storeFile"]))
                storePassword keystoreProperties["storePassword"]
                keyAlias keystoreProperties["keyAlias"] as String
                keyPassword keystoreProperties["keyPassword"] as String
            }
        }
    }

    defaultConfig {
        applicationId "org.emschu.snmp.cockpit"
        minSdk 24
        targetSdk 34
        versionCode 50
        versionName versionCode.toString()
        resourceConfigurations += ['en', 'de']

        testApplicationId applicationId + ".test"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments disableAnalytics: 'true'
        testInstrumentationRunnerArguments clearPackageData: 'true'

        buildConfigField "String", "BUILD_APP_VERSION_STRING", '"v1.0"'
        buildConfigField "long", "BUILD_TIMESTAMP", hoursSinceEpoch + "L"
        vectorDrawables {
            useSupportLibrary true
        }

        applicationVariants.all { variant ->
            if (variant.buildType.name == "release") {
                variant.buildConfigField "Long", "BUILD_TIMESTAMP", System.currentTimeMillis() + "L"
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix = ".debug"
        }
        release {
            applicationIdSuffix = ""
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (useKeystoreProperties) {
                signingConfig = signingConfigs.getByName("release")
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
    }
    buildFeatures {
        compose true
        dataBinding false
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compilerExtensionVersion
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    testOptions {
        animationsDisabled true
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true

            all {
                if (it.name == 'testDebugUnitTest') {
                    systemProperty 'debug', 'true'
                }
            }
        }
    }
    namespace 'org.emschu.snmp.cockpit'
    project.tasks.preBuild.dependsOn("copyLicense")
}

dependencies {
    implementation "androidx.core:core-ktx:$coreKtxVersion"

    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation 'androidx.activity:activity-compose:1.7.2'
    implementation "com.google.android.material:material:$googleMaterialVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinGradlePluginVersion"

    implementation "androidx.compose.foundation:foundation:$compose_version"
    implementation "androidx.compose.foundation:foundation-layout:$compose_version"

    implementation "androidx.compose.material3:material3:1.1.1"
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    implementation "androidx.compose.runtime:runtime:$compose_version_ui"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version_ui"

    implementation "androidx.compose.ui:ui:$compose_version_ui"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version_ui"
    implementation "androidx.compose.ui:ui-viewbinding:$compose_version_ui"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version_ui"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
//    implementation "androidx.lifecycle:lifecycle-service:$lifecycleVersion"
//    implementation "androidx.lifecycle:lifecycle-process:$lifecycleVersion"

    implementation 'com.google.accompanist:accompanist-pager:0.32.0'

    implementation "androidx.navigation:navigation-compose:$navigationComposeVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationComposeVersion"
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'androidx.work:work-runtime:2.8.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"

    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:5.5.0"
    testImplementation "androidx.lifecycle:lifecycle-runtime-testing:$lifecycleVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesVersion"
    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation "androidx.test.ext:junit:$androidJUnitExtVersion"
    androidTestImplementation "androidx.test:rules:1.5.0"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:espressoVersion'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version_ui"
    androidTestUtil 'androidx.test:orchestrator:1.4.2'
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_version_ui")

    // project specific non-platform libs
    implementation project(":treeview")
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.2'
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    implementation 'com.github.mukeshsolanki:MarkdownView-Android:2.0.0'
    implementation "com.mikepenz:aboutlibraries-compose:$latestAboutLibsRelease"
    implementation "com.mikepenz:aboutlibraries-core:$latestAboutLibsRelease"
    implementation "commons-validator:commons-validator:1.8.0"
    implementation 'org.snmp4j:snmp4j:3.7.7'
    implementation 'com.github.AppIntro:AppIntro:6.2.0'
}

tasks.register('copyLicense', Copy) {
    from layout.projectDirectory.dir("..").file("LICENSE")
    from layout.projectDirectory.dir("..").file("PRIVACY_POLICY.md")
    from layout.projectDirectory.dir("..").dir("docs").file("MIB_catalog_guide.md")
    from layout.projectDirectory.dir("..").dir("docs").file("QR_code_guide.md")
    into layout.projectDirectory.dir("src").dir("main").dir("assets")
}